Input:
Linked List: 1->2->3->4->5->6->7
Output:
4 2 1 3 6 5 7
Explanation :
The BST formed using elements of the 
linked list is,
        4
      /   \
     2     6
   /  \   / \
  1   3  5   7  
Hence, preorder traversal of this 
tree is 4 2 1 3 6 5 7
CODE:

TNode* solve(int start,int end,vector<int>&node){
        if(start>end)return NULL;
        int mid;
        if((start+end)%2==0){
           mid=(start+end)/2; 
        }
        else{
            mid=(start+end+1)/2;
        }
        TNode* root=new TNode(node[mid]);
        root->left=solve(start,mid-1,node);
        root->right=solve(mid+1,end,node);
        return root;
    }
    TNode* sortedListToBST(LNode *head) {
        vector<int>node;
        while(head){
            node.push_back(head->data);
            head=head->next;
        }
        int start=0,end=node.size()-1;
       return solve(start,end,node);
    }
