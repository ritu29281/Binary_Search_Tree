Input:
       30
      /
     20
    /
   10
Output:
     20
   /   \
 10     30
CODE:
void Inorder(Node* root,vector<int>&inorder){
        if(root==NULL) return;
         Inorder(root->left,inorder);
         inorder.push_back(root->data);
        Inorder(root->right,inorder);
    }
     Node* buildbalancedBST(vector<int>inorder,int start,int end){
         if(start>end) return NULL;
         int mid=(start+end)/2;
         Node* root=new Node(inorder[mid]);
         root->left=buildbalancedBST(inorder,start,mid-1);
         root->right=buildbalancedBST(inorder,mid+1,end);
         return root;
     }
     
    // Your are required to complete this function
    // function should return root of the modified BST
    Node* buildBalancedTree(Node* root)
    {
        vector<int>inorder;
        Inorder(root,inorder);
        int start=0,end=inorder.size()-1;
        return buildbalancedBST(inorder,start,end);
    }
